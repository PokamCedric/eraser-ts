================================================================================
HIERARCHICAL LAYOUT ENGINE - PYTHON IMPLEMENTATION
INDEX DES FICHIERS
================================================================================

📖 COMMENCEZ ICI
--------------------------------------------------------------------------------
QUICKSTART.txt          Guide de démarrage rapide (2 minutes)
                        → Commencez par ce fichier !

🚀 SCRIPTS PYTHON
--------------------------------------------------------------------------------
hierarchical_layout.py  Script complet avec analyse détaillée
                        Usage: python hierarchical_layout.py

run_test.py             Script simple pour tester un fichier DSL
                        Usage: python run_test.py [fichier.txt]

verify_algorithm.py     Vérification Python vs TypeScript
                        Usage: python verify_algorithm.py

📄 EXEMPLES DSL
--------------------------------------------------------------------------------
test_dsl.txt            Exemple complexe (16 entités, 19 relations)
                        Système complet avec users, posts, comments, etc.

example_simple.txt      Exemple simple (3 entités, 2 relations)
                        Blog basique : comments → posts → users

example_ecommerce.txt   E-commerce (7 entités, 9 relations)
                        Orders, products, users, payments, etc.

from_screenshot.txt     Extrait partiel de l'interface
                        Relations visibles dans la capture d'écran

📚 DOCUMENTATION
--------------------------------------------------------------------------------
README.md               Documentation technique complète
                        - Principe de l'algorithme
                        - Format DSL détaillé
                        - Exemples d'utilisation
                        - Cas d'usage

USAGE.md                Guide d'utilisation pratique
                        - Instructions pas à pas
                        - Créer vos propres tests
                        - Interpréter les résultats
                        - Optimiser un schéma
                        - Résoudre les problèmes

DIFFERENCES.md          ⭐ Explication Python vs Interface Visuelle
                        - Pourquoi les résultats diffèrent
                        - Les 6 étapes de l'algorithme complet
                        - Quand utiliser Python vs TypeScript

SUMMARY.md              Résumé complet du projet
                        - Objectifs atteints
                        - Validation des résultats
                        - Cas d'usage recommandés
                        - Prochaines étapes

INDEX.txt               Ce fichier (navigation rapide)

🎯 PARCOURS RECOMMANDÉ
--------------------------------------------------------------------------------

1. DÉBUTANT - "Je veux juste tester rapidement"
   ↓
   QUICKSTART.txt → python run_test.py test_dsl.txt

2. UTILISATEUR - "Je veux créer mes propres tests"
   ↓
   USAGE.md → Créer mon_schema.txt → python run_test.py mon_schema.txt

3. DÉVELOPPEUR - "Je veux comprendre l'algorithme"
   ↓
   README.md → hierarchical_layout.py (lire le code)

4. DÉBOGEUR - "Le layout visuel diffère de Python"
   ↓
   DIFFERENCES.md ⭐ → verify_algorithm.py

5. EXPERT - "Je veux tout savoir"
   ↓
   SUMMARY.md → Tous les fichiers

❓ QUESTIONS FRÉQUENTES
--------------------------------------------------------------------------------

Q: Pourquoi Python et l'interface montrent des layouts différents ?
A: Lisez DIFFERENCES.md - C'est normal et expliqué en détail

Q: Comment vérifier que Python calcule correctement ?
A: Lancez: python verify_algorithm.py
   Puis comparez avec la console du navigateur (F12)

Q: Quel script utiliser pour tester mon DSL ?
A: python run_test.py mon_fichier.txt

Q: Comment créer un fichier DSL ?
A: Format: entity1.field > entity2.field
   Voir USAGE.md section "Format DSL"

Q: Python est-il aussi rapide que TypeScript ?
A: Oui, < 1ms pour 20 entités (algorithme identique)

Q: Puis-je utiliser Python en production ?
A: Oui pour valider la logique, mais TypeScript pour le rendu visuel

🔧 COMMANDES RAPIDES
--------------------------------------------------------------------------------

# Test exemple par défaut
python run_test.py

# Test exemple simple
python run_test.py example_simple.txt

# Test exemple complexe
python run_test.py test_dsl.txt

# Test avec statistiques complètes
python hierarchical_layout.py

# Vérification vs TypeScript
python verify_algorithm.py

# Test votre propre fichier
python run_test.py mon_schema.txt

📊 STRUCTURE DU PROJET
--------------------------------------------------------------------------------

python_test/
├── Scripts Python (3)
│   ├── hierarchical_layout.py    # Complet avec stats
│   ├── run_test.py               # Simple
│   └── verify_algorithm.py       # Vérification
│
├── Exemples DSL (4)
│   ├── test_dsl.txt              # Complexe
│   ├── example_simple.txt        # Simple
│   ├── example_ecommerce.txt     # E-commerce
│   └── from_screenshot.txt       # Partiel
│
└── Documentation (5)
    ├── QUICKSTART.txt            # ⚡ Démarrage rapide
    ├── USAGE.md                  # 📖 Guide complet
    ├── README.md                 # 🔧 Documentation technique
    ├── DIFFERENCES.md            # ⭐ Python vs Visuel
    ├── SUMMARY.md                # 📊 Résumé
    └── INDEX.txt                 # 🗺️ Ce fichier

💡 ASTUCE
--------------------------------------------------------------------------------
Besoin d'aide ? Les fichiers sont ordonnés par complexité :

QUICKSTART.txt < USAGE.md < README.md < DIFFERENCES.md < SUMMARY.md

Commencez par QUICKSTART.txt et progressez selon vos besoins !

================================================================================
